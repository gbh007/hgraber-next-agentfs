// Code generated by ogen, DO NOT EDIT.

package agentAPI

import (
	"context"

	ht "github.com/ogen-go/ogen/http"
)

// UnimplementedHandler is no-op Handler which returns http.ErrNotImplemented.
type UnimplementedHandler struct{}

var _ Handler = UnimplementedHandler{}

// APICoreStatusGet implements GET /api/core/status operation.
//
// Получение данных о состоянии агента.
//
// GET /api/core/status
func (UnimplementedHandler) APICoreStatusGet(ctx context.Context) (r APICoreStatusGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIExportArchivePost implements POST /api/export/archive operation.
//
// Загрузка архива.
//
// POST /api/export/archive
func (UnimplementedHandler) APIExportArchivePost(ctx context.Context, req APIExportArchivePostReq, params APIExportArchivePostParams) (r APIExportArchivePostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIFsCreatePost implements POST /api/fs/create operation.
//
// Создание нового файла.
//
// POST /api/fs/create
func (UnimplementedHandler) APIFsCreatePost(ctx context.Context, req APIFsCreatePostReq, params APIFsCreatePostParams) (r APIFsCreatePostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIFsDeletePost implements POST /api/fs/delete operation.
//
// Удаление файла.
//
// POST /api/fs/delete
func (UnimplementedHandler) APIFsDeletePost(ctx context.Context, req *APIFsDeletePostReq) (r APIFsDeletePostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIFsGetGet implements GET /api/fs/get operation.
//
// Получение файла.
//
// GET /api/fs/get
func (UnimplementedHandler) APIFsGetGet(ctx context.Context, params APIFsGetGetParams) (r APIFsGetGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIFsIdsGet implements GET /api/fs/ids operation.
//
// Получение ID всех хранимых файлов.
//
// GET /api/fs/ids
func (UnimplementedHandler) APIFsIdsGet(ctx context.Context) (r APIFsIdsGetRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIParsingBookCheckPost implements POST /api/parsing/book/check operation.
//
// Предварительная проверка ссылок на новые книги.
//
// POST /api/parsing/book/check
func (UnimplementedHandler) APIParsingBookCheckPost(ctx context.Context, req *APIParsingBookCheckPostReq) (r APIParsingBookCheckPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIParsingBookMultiPost implements POST /api/parsing/book/multi operation.
//
// Обработка ссылки с набором книг (например всех глав
// манги).
//
// POST /api/parsing/book/multi
func (UnimplementedHandler) APIParsingBookMultiPost(ctx context.Context, req *APIParsingBookMultiPostReq) (r APIParsingBookMultiPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIParsingBookPost implements POST /api/parsing/book operation.
//
// Обработка новой книги.
//
// POST /api/parsing/book
func (UnimplementedHandler) APIParsingBookPost(ctx context.Context, req *APIParsingBookPostReq) (r APIParsingBookPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIParsingPageCheckPost implements POST /api/parsing/page/check operation.
//
// Предварительная проверка ссылок для загрузки страниц.
//
// POST /api/parsing/page/check
func (UnimplementedHandler) APIParsingPageCheckPost(ctx context.Context, req *APIParsingPageCheckPostReq) (r APIParsingPageCheckPostRes, _ error) {
	return r, ht.ErrNotImplemented
}

// APIParsingPagePost implements POST /api/parsing/page operation.
//
// Загрузка изображения страницы.
//
// POST /api/parsing/page
func (UnimplementedHandler) APIParsingPagePost(ctx context.Context, req *APIParsingPagePostReq) (r APIParsingPagePostRes, _ error) {
	return r, ht.ErrNotImplemented
}
